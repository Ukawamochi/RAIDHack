name: Deploy RAIDHack – Production

on:
  push:
    branches: [ master ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    name: Deploy Workers API (prod)
    outputs:
      api-url: ${{ steps.deploy-api.outputs.api-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - name: Install API dependencies
        run: |
          cd api
          npm ci

      - name: Deploy Workers API
        id: deploy-api
        run: |
          cd api
          WORKER_NAME="raidhack-api"
          API_URL="https://raidhack-api.ukawamochi5.workers.dev"
          echo "Deploying to: $API_URL"
          npx wrangler deploy --minify --name "$WORKER_NAME"
          echo "api-url=$API_URL" >> $GITHUB_OUTPUT
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-web:
    runs-on: ubuntu-latest
    name: Deploy Pages (prod)
    needs: deploy-api
    outputs:
      pages-url: ${{ steps.deploy-pages.outputs.pages-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install Web dependencies
        run: |
          cd web
          npm ci

      - name: Build React app
        run: |
          cd web
          echo "Building with API_BASE: ${{ needs.deploy-api.outputs.api-url }}"
          echo "VITE_API_BASE=${{ needs.deploy-api.outputs.api-url }}" > .env.production
          npm run build
          echo "Build completed. Contents of dist:"
          ls -la dist/
        env:
          VITE_API_BASE: ${{ needs.deploy-api.outputs.api-url }}

      - name: Deploy to Cloudflare Pages (production)
        id: deploy-pages
        run: |
          cd web
          
          echo "Deploying to production environment"
          echo "Current directory contents:"
          ls -la
          
          # wranglerでプロジェクト情報を確認
          echo "Checking wrangler configuration..."
          npx wrangler pages project list || echo "Could not list projects, proceeding with deployment"
          
          # Cloudflare Pages にデプロイ（本番環境）
          echo "Starting deployment to raidhack-web..."
          npx wrangler pages deploy dist \
            --project-name "raidhack-web" \
            --production \
            --compatibility-date "2024-01-15"
          
          # 本番環境のURL
          PAGES_URL="https://raidhack-web.pages.dev"
          echo "Production URL: $PAGES_URL"
          echo "pages-url=$PAGES_URL" >> $GITHUB_OUTPUT
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}