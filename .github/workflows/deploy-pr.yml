name: Deploy RAIDHack – Pull Request

on:
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to deploy (required for manual run)'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    name: Deploy Workers API (PR)
    outputs:
      api-url: ${{ steps.deploy-api.outputs.api-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - name: Install API dependencies
        run: |
          cd api
          npm ci

      - name: Deploy Workers API
        id: deploy-api
        run: |
          cd api
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER="${{ github.event.number }}"
          else
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
          fi

          WORKER_NAME="raidhack-api-pr-$PR_NUMBER"
          API_URL="https://${WORKER_NAME}.ukawamochi5.workers.dev"

          echo "Deploying to: $API_URL"
          npx wrangler deploy --minify --name "$WORKER_NAME"
          echo "api-url=$API_URL" >> $GITHUB_OUTPUT
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-web:
    runs-on: ubuntu-latest
    name: Deploy Pages (PR)
    needs: deploy-api
    outputs:
      pages-url: ${{ steps.deploy-pages.outputs.pages-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install Web dependencies
        run: |
          cd web
          npm ci

      - name: Build React app
        run: |
          cd web
          # Generate dynamic environment variables for PR
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER="${{ github.event.number }}"
          else
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
          fi
          
          PAGES_URL="https://pr-${PR_NUMBER}.raidhack-web.pages.dev"
          
          echo "VITE_API_BASE=${{ needs.deploy-api.outputs.api-url }}" >> .env.production
          
          echo "=== PR Build Configuration ==="
          echo "API URL: ${{ needs.deploy-api.outputs.api-url }}"
          echo "Pages URL: ${PAGES_URL}"
          
          npm run build

      - name: Deploy to Cloudflare Pages (PR branch)
        id: deploy-pages
        run: |
          cd web
          PROJECT_NAME="raidhack-web"

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER="${{ github.event.number }}"
          else
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
          fi

          BRANCH_NAME="pr-$PR_NUMBER"
          echo "Deploying PR to branch: $BRANCH_NAME"
          output=$(npx wrangler@latest pages deploy dist --project-name "$PROJECT_NAME" --branch "$BRANCH_NAME" 2>&1)
          PAGES_URL="https://${BRANCH_NAME}.raidhack-web.pages.dev"

          echo "$output"
          actual_url=$(echo "$output" | grep -oE 'https://[a-zA-Z0-9\-\.]+\.pages\.dev' | head -1)
          if [ -n "$actual_url" ]; then
            PAGES_URL="$actual_url"
          fi

          echo "pages-url=$PAGES_URL" >> $GITHUB_OUTPUT
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Comment PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const pagesUrl = '${{ steps.deploy-pages.outputs.pages-url }}';
            const apiUrl = '${{ needs.deploy-api.outputs.api-url }}';
            const prNumber = ${{ github.event.number }};
            const comment = `## 🚀 PR環境デプロイ完了\n\nこのPR (#${prNumber}) の変更が専用環境にデプロイされました：\n\n- **Webアプリ**: ${pagesUrl}\n- **API**: ${apiUrl}\n\n各PRごとに独立した環境で動作します。デプロイメントを確認してください。\n\n> **Note**: この環境はPRがクローズされると自動的に削除されます。`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });